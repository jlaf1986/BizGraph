@{

    Layout = "~/Views/Shared/_layout_3CC_three_centered_columns.cshtml";
    var myProfile = (FHNWPrototype.Domain._Base.Accounts.CompleteProfile)Session["myProfile"];
    ViewBag.Title = myProfile.FullName + "(Messenger)";
}
 
 
@section settings{


 <div id="logo">
 <a href="@Url.Action("Index","UserAccounts", null,null)"><img id="img_logo" src="@Url.Content("~/Content/themes/designv1/images/transparent.png")" alt="logo" /></a> 
</div>

<section id="notifications">

    @*  <article id="notifications_mywall">
        <span id="counter_notifications_mywall">5</span>

    </article>*@

    <article id="notifications_newsfeed">
        <span id="counter_notifications_newsfeed">3</span>

    </article>
    
 

     @*   <article id="notifications_groups">
        <span id="counter_notifications_groups">3</span>

    </article>*@
   
</section>

     <section id="links_section">
        @*
        <article id="link_chat">
            <span id="counter_notifications_chat">4</span>
        </article>

        <article id="link_organization">
            <span id="counter_notifications_organization">3</span>
        </article>*@
    

        <article>
              @Html.ActionLink("Log Off", "LogOff", "Account", null, null)

        </article>

              <article id="link_graph">
                @Html.ActionLink("Graph", "Graph", "UserAccounts", null, null)
        </article>
      
    </section>
}


@section header_style{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/designv1/newsfeed.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/designv1/d3.css")" />
}

@section header{
        
    <div id="newsfeed_info">
             
            <div id="profile_name">@Html.ActionLink(myProfile.FullName, "UserAccount","UserAccounts", new { id=@myProfile.BasicProfile.ReferenceKey.ToString() },null)</div>
            <div id="working_at">working at @myProfile.Description1   </div>
         
    </div>
   
}

@section Scripts {
 
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
    var width = 550,
    height = 700;

    var color = d3.scale.category20();

    var force = d3.layout.force()
        .charge(-120)
        .linkDistance(30)
        .size([width, height]);

    var svg = d3.select("#middle_column").append("svg")
        .attr("width", width)
        .attr("height", height);

    d3.json("@Url.Action("visualizationdata")", function (error, graph) {
        force
            .nodes(graph.nodes)
            .links(graph.links)
            .start();

        var link = svg.selectAll("line.link")
            .data(graph.links)
          .enter().append("line")
            .attr("class", "link")
            .style("stroke-width", function (d) { return Math.sqrt(d.value); });

        var node = svg.selectAll("circle.node")
            .data(graph.nodes)
          .enter().append("circle")
            .attr("class", "node")
            .attr("r", 5)
            .style("fill", function (d) { return color(d.group); })
            .call(force.drag);

        node.append("title")
            .text(function (d) { return d.name; });

        force.on("tick", function () {
            link.attr("x1", function (d) { return d.source.x; })
                .attr("y1", function (d) { return d.source.y; })
                .attr("x2", function (d) { return d.target.x; })
                .attr("y2", function (d) { return d.target.y; });

            node.attr("cx", function (d) { return d.x; })
                .attr("cy", function (d) { return d.y; });
        });
    });

</script>


}
  